/**
 * New Ambition
 * New Ambition REST API
 *
 * OpenAPI spec version: 1.1.0
 * Contact: federico.pastore@bnlmail.com
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */

import * as api from "./api"
import { Configuration } from "./configuration"

const config: Configuration = {}

describe("DefaultApi", () => {
  let instance: api.DefaultApi
  beforeEach(function() {
    instance = new api.DefaultApi(config)
  });

  test("createPolicy", () => {
    const body: api.Policy = undefined
    return expect(instance.createPolicy(body, {})).resolves.toBe(null)
  })
  test("createProposal", () => {
    const body: api.Body2 = undefined
    return expect(instance.createProposal(body, {})).resolves.toBe(null)
  })
  test("createQuotation", () => {
    const body: api.Quotation = undefined
    return expect(instance.createQuotation(body, {})).resolves.toBe(null)
  })
  test("documentsGet", () => {
    const proposalId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    const policyId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.documentsGet(proposalId, policyId, {})).resolves.toBe(null)
  })
  test("documentsIdGet", () => {
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.documentsIdGet(id, {})).resolves.toBe(null)
  })
  test("getPolicy", () => {
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.getPolicy(id, {})).resolves.toBe(null)
  })
  test("getProposal", () => {
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.getProposal(id, {})).resolves.toBe(null)
  })
  test("getSurvey", () => {
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.getSurvey(id, {})).resolves.toBe(null)
  })
  test("getValuelists", () => {
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.getValuelists(id, {})).resolves.toBe(null)
  })
  test("listSurveys", () => {
    const productId: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    const subjectType: string = "subjectType_example"
    return expect(instance.listSurveys(productId, subjectType, {})).resolves.toBe(null)
  })
  test("listValuelists", () => {
    return expect(instance.listValuelists({})).resolves.toBe(null)
  })
  test("patchQuotation", () => {
    const body: api.Body1 = undefined
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.patchQuotation(body, id, {})).resolves.toBe(null)
  })
  test("productsGet", () => {
    const category: string = "category_example"
    return expect(instance.productsGet(category, {})).resolves.toBe(null)
  })
  test("productsIdGet", () => {
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.productsIdGet(id, {})).resolves.toBe(null)
  })
  test("submitSurvey", () => {
    const body: api.SurveySubmission = undefined
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.submitSurvey(body, id, {})).resolves.toBe(null)
  })
  test("updatePolicy", () => {
    const body: api.Policy = undefined
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.updatePolicy(body, id, {})).resolves.toBe(null)
  })
  test("updateProposal", () => {
    const body: api.Quotation = undefined
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.updateProposal(body, id, {})).resolves.toBe(null)
  })
  test("updateQuotation", () => {
    const body: api.Body = undefined
    const id: string = "38400000-8cf0-11bd-b23e-10b96e4ef00d"
    return expect(instance.updateQuotation(body, id, {})).resolves.toBe(null)
  })
})

